<!DOCTYPE html>
<html>
<head>
<title>Fancy Foodie</title>
<link rel="icon" type="image/png" href="/public/img/favicon.png">
<link rel="apple-touch-icon" type="image/png" href="/public/img/touch.png">
<meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
<style type="text/css">
	html, body {
		margin: 0px;
		padding: 0px
	}
	#nav {
		height: 30px;
	}

	#container {
		margin: 0;
		padding: 0;
	}

	@media only screen and (max-width: 639px) {
		#map_canvas {
			margin: 0px 5px 8px 5px;
			padding: 0;
		}
		#comments {
			width: 100%;
			margin: 8px 0px 0px 0px;
			padding: 0;
		}
	}

	@media only screen and (min-width: 639px) {
		#map_canvas {
			float: left;
			margin: 0px 5px 0px 5px;
			padding: 0;
		}
		#comments {
			float: left;
			margin: 0px 5px 0px 5px;
			padding: 0;
		}
	}

	input {
		height: 22px;
	}

	#remove, #recommend, #edit, #save, #cancel, #draggable {
		display: none;
	}

	#comment {
		font-size: 22px;
		height: 45px;
		margin: 0px 5px 0px 5px;
		padding: 0;
	}
	#name_show {
                padding-left: 5px;
		font-size: 20px;
		font-weight: bold;
	}
	#tags_show {
		font-size: 10px;
		font-weight: normal;
	}

	#referer {
		margin: 2px 5px 5px 5px;
		padding: 0;
		font-size: 10px;
		font-weight: normal;
		display: block;
	}
	#name_edit {
		display: none;
                margin: 0;
                padding: 5px 5px 0px 5px;
		width: 190px;
		height: 24px;
                font-size: 20px;
                font-weight: bold;
	}
	#tags_edit {
		display: none;
                margin: 0;
		width: 80px;
	}
	#add {
		margin-left: 5px;
		display: block;
	}
	ul {
		width: 100%;
		margin: 0;
                padding: 0;
	}
        li {
		width: 100%;
                margin: 0;
                padding: 0;
                display: block;
                list-style-type: none;
        }
        li h1 {
                margin: 0;
                padding: 5px 5px 0px 5px;
                font-size: 16px;
                font-weight: normal;
        }
        li h2 {
                margin: 0;
                padding: 3px 5px 5px 5px;
                font-size: 10px;
                font-weight: normal;
        }

	h2 {
		margin: 0px 5px 5px 5px;
		font-size: 16px;
	}

	h3 {
		margin: 5px 5px 3px 5px;
		font-size: 12px;
	}
</style>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
<script type="text/javascript" src="http://code.google.com/apis/gears/gears_init.js"></script>
<script type="text/javascript" src="/public/js/jquery-1.4.2.min.js"></script>
<script type="text/javascript" src="/public/js/json2.js"></script>   
<script type="text/javascript" src="/public/js/geo.js"></script>   
<script type="text/javascript" src="/public/js/fsm.js"></script>   
<script type="text/javascript">
	var self_uid = <%= session != null && session["uid"] ? session["uid"] : "null" %>
	var editable = <%= params["editable"] %>
	var pick = <%= params["pick"].toSource() %>
	var map
	var user
	var marker
	var last_position
	var map_click_listener 

	function updatePosition(position) {
		if(last_position && (state.state_name != "show" || (last_position && calcDist(last_position.coords.latitude, last_position.coords.longitude, position.coords.latitude, position.coords.longitude) <= 0.02))) {
			return
		}

		last_position = position;

		if(user) {
			user.setMap(null)
		}

		user = new google.maps.Marker({
			position: new google.maps.LatLng(position.coords.latitude,position.coords.longitude), 
			map: map,
			icon: "/public/img/user.gif",
			title:"Me!"
		})

		map.fitBounds(new google.maps.LatLngBounds(
			new google.maps.LatLng(Math.max(position.coords.latitude, pick.data.lat),
					       Math.min(position.coords.longitude, pick.data.lng)),
			new google.maps.LatLng(Math.min(position.coords.latitude, pick.data.lat),
					       Math.max(position.coords.longitude, pick.data.lng))))
	}

	$(document).ready(function () {
		if($(window).width() >= 640) {
			var width = Math.min(800, $(window).width())
			var map_width = parseInt(width * 0.6);
			var comments_width = width - map_width - 10;
			map_width -= 10;
			$("#map_canvas").width(map_width)
			$("#map_canvas").height(3 * map_width / 4)
			$("#comments").width(comments_width)
			$("#comment").width(comments_width - 6)
		} else {
			$("#map_canvas").width($(window).width() - 10)
			$("#map_canvas").height(3 * $(window).width() / 4)
			$("#comments").width($(window).width() - 10)
			$("#comment").width($(window).width() - 16)
		}

		map = new google.maps.Map(document.getElementById("map_canvas"), {
			zoom: 17,
			mapTypeControl: false,
			disableDoubleClickZoom: true,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		})

		marker = new google.maps.Marker({
			position: new google.maps.LatLng(pick.data.lat, pick.data.lng), 
			map: map,
			title: pick.data.name + " by " + pick.data.referer_name
		})


		state = new FSM({
			start: function(fsm, event) {
				function next() {
					var tokens = window.location.href.split("#")
					if(editable && tokens.length > 1 && tokens[1] == "edit") {
						fsm.trans("edit")
					} else {
						fsm.trans("show")
					}
				}

				try {
					if(geolocation) {
						geolocation.getCurrentPosition(
							function(p) {
								updatePosition(p)
								next()
							},
							function() {
								updatePosition({ coords: { latitude: pick.data.lat, longitude: pick.data.lng }})
								next()
							}, 
							{ maximumAge: 0, enableHighAccuracy: true })
						geolocation.watchPosition(
							updatePosition, 
							function() {},
							{ maximumAge: 0, enableHighAccuracy: true })
					} else {
						throw "geolocation not supported"
					}
				} catch(e) {
					updatePosition({ coords: { latitude: pick.data.lat, longitude: pick.data.lng }})
					next()
				}
			},
			show: {
				onenter: function(fsm, event) {
					$("#name_show").html(pick.data.name)
					$("#tags_show").html("(" + (pick.data.tags && pick.data.tags.length > 0 ? pick.data.tags.join(" ") : "&lt;untagged&gt;") + ")")
					$("#list").show()
					$("#map").show()
					$("#comments").show()
					$("#name_show").show()
					$("#tags_show").show()

					if(!self_uid) {
						$("#recommend").hide()
						$("#remove").hide()
					} else if($.inArray(self_uid, pick.referees) > -1) {
						$("#remove").click(function() {
							if(pick.data.referer_uid == self_uid) {
								if(confirm("remove " + pick.data.name + "?")) {
									$("#remove").attr("disabled", "disabled")
									$.post("/pick/remove/" + pick.key,
										function() {
											window.location = "/"	
										})
								}
							} else {
								$("#remove").attr("disabled", "disabled")
								$.post("/pick/remove/" + pick.key, 
									function() {
										$("#recommend").show()
										$("#remove").attr("disabled", "")
										$("#remove").hide()
									})
							}
						})

						$("#recommend").hide()
						$("#remove").show()
					} else if($.inArray(self_uid, pick.referees) == -1 && self_uid != pick.data.referer_uid) {
						$("#recommend").click(function() {
							$("#recommend").attr("disabled", "disabled")
							$.post("/pick/recommend/" + pick.key,
								function() {
									$("#recommend").attr("disabled", "")
									$("#recommend").hide()
									$("#remove").show()
								})
						})

						$("#recommend").show()
						$("#remove").hide()
					}

					if(editable) {
						$("#edit").show()
					}
				},
				onexit: function(fsm, event) {
					$("#list").hide()
					$("#map").hide()
					$("#recommend").hide()
					$("#remove").hide()
					$("#comments").hide()
					$("#name_show").hide()
					$("#tags_show").hide()
				},
				EDIT: function(fsm, event) {
					fsm.trans("edit")	
				}
			},
			edit: {
				onenter: function(fsm, event) {
					$("#edit").hide()
					$("#save").show()
					$("#cancel").show()
					$("#name_edit").val(pick.data.name)
					$("#name_edit").show()
					$("#tags_edit").val(pick.data.tags ? pick.data.tags.join(" ") : "<add tags>")
					$("#tags_edit").show()
					$("#draggable").show()

					marker.setDraggable(true)
					map_click_listener = google.maps.event.addListener(map, 'click', function(event) {
						marker.setMap(null)
						marker = new google.maps.Marker({
								position: event.latLng, 
								map: map,
								draggable: true,
								title: pick.data.name + " by " + pick.data.referer_name
							})
					})

				},
				onexit: function(fsm, event) {
					$("#edit").show()
					$("#save").hide()
					$("#cancel").hide()
					$("#name_edit").hide()
					$("#tags_edit").hide()
					$("#draggable").hide()

					marker.setDraggable(false)
					google.maps.event.removeListener(map_click_listener)
				},
				SHOW: function(fsm, event) {
					fsm.trans("show")
				}
			}
		})

		$("#edit").click(function() {
			state.handle("EDIT")
		})

		$("#save").click(function() {
			pick.data.name = $("#name_edit").val()
			pick.data.tags = $("#tags_edit").val()
			pick.data.tags = pick.data.tags == "<add tags>" ? "" : pick.data.tags
			pick.data.lat = marker.getPosition().lat()
			pick.data.lng = marker.getPosition().lng()

			$.ajax({
				type: "POST",
				url: "/pick/edit",
				contentType: "application/json",
				dataType: 'json',
				data: JSON.stringify(pick),
				success: function(p) {
					pick = p
					state.handle("SHOW")
				},
				error: function() {
					alert("something blew up")
				}
			})
		})

		$("#cancel").click(function() {
			state.handle("SHOW")
		})

		$("#add").click(function() {
			$.ajax({
				type: "POST",
				url: "/comments/post/" + pick.key,
				contentType: "application/json",
				dataType: 'json',
				data: JSON.stringify($("#comment").val()), success: function(msg) {
					$("#comment").val("")
					$("#comments ul").append("<li><h1>" + msg.comment + "</h1><h2>" + msg.author + ",  Just now</h2></li>")
				}
			})
			$("#comment textarea").val("")
		})

		state.start('startup')
	})
</script>
</head>
<body>
	<div id="nav">
		<input type="button" id="list" value="Listing" onclick="window.location='/'"/>
		<input type="button" id="map" value="Map" onclick="window.location='/#map'"/>
		<input type="button" id="edit" value="Edit"/>
		<input type="button" id="recommend" value="+ to Picks"/>
		<input type="button" id="remove" value="- from Picks"/>
		<input type="button" id="save" value="Save"/>
		<input type="button" id="cancel" value="Cancel"/>
	</div>

	<span id="name_show"></span><input id="name_edit" type="text"/>
	<span id="tags_show"></span><input id="tags_edit" type="text"/>
	<span id="referer">recommended by <%= params["pick"].data.referer_name %><% if(params["pick"].referees.length > 1) { echo(" and " + (params["pick"].referees.length - 1) + " others") } %></span>
	<%
		var pick = params["pick"]
		var contents = new Array()
		if(pick.data.address_lines) {
			contents.push("<br/>")
			contents.push(pick.data.address_lines.join(", "))
		}
		if(pick.data.phones) {
			contents.push("<br/>")
			contents.push(pick.data.phones.map(function(e) { return e.number }).join(", "))
		}
		if(pick.data.url) {
			contents.push("<br/>")
			contents.push("<a href=\"")
			contents.push(pick.data.url)
			contents.push("\">")
			contents.push(pick.data.url)
			contents.push("</a>")
		}

		echo(contents.join(""))
	%>

	<div id="container">
		<h3 id="draggable">tip: tap map or drag marker</h3>
		<div id="map_canvas"></div>
		<div id="comments">
			<h2>Comments</h2>
			<ul>
				<%
				var comments = params["pick"].comments
				for(var i = 0 ; i < comments.length ; i++) {
					echo("<li>")
					echo("<h1>" + comments[i].comment + "</h1><h2>" + comments[i].author + ", " + comments[i].timestamp + "</h2>")
					echo("</li>")
				}
				%>
			</ul>
			<textarea id="comment"></textarea>
			<input type="button" id="add" value="Comment"/>
		</div>
	</div>
</body>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-18229677-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</html>
